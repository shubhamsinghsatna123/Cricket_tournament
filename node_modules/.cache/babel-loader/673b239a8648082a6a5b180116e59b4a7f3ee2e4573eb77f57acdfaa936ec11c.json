{"ast":null,"code":"var _jsxFileName = \"D:\\\\microservices\\\\Cricket Tournament\\\\Cricket tounament frontend\\\\cricket-tournament\\\\src\\\\components\\\\TournamentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TournamentForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    logoUrl: '',\n    description: '',\n    purpose: '',\n    duration: '',\n    organizerName: '',\n    organizerPhone: ''\n  });\n  const handleChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8080/tournament/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        alert('Tournament created!');\n      } else {\n        const errorData = await response.json();\n        alert('Error: ' + errorData.message);\n      }\n    } catch (error) {\n      console.error('Fetch error:', error);\n      alert('Network error while creating tournament');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Tournament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"input\", {\n      name: key,\n      placeholder: key,\n      onChange: handleChange,\n      required: true\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TournamentForm, \"LtSXM22EiP+ronPe1dhJc0Vdwo4=\");\n_c = TournamentForm;\nexport default TournamentForm;\nvar _c;\n$RefreshReg$(_c, \"TournamentForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TournamentForm","_s","formData","setFormData","name","logoUrl","description","purpose","duration","organizerName","organizerPhone","handleChange","e","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","message","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","placeholder","onChange","required","type","_c","$RefreshReg$"],"sources":["D:/microservices/Cricket Tournament/Cricket tounament frontend/cricket-tournament/src/components/TournamentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TournamentForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    logoUrl: '',\r\n    description: '',\r\n    purpose: '',\r\n    duration: '',\r\n    organizerName: '',\r\n    organizerPhone: ''\r\n  });\r\n\r\n  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/tournament/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Tournament created!');\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert('Error: ' + errorData.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      alert('Network error while creating tournament');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Create Tournament</h2>\r\n      {Object.keys(formData).map((key) => (\r\n        <input key={key} name={key} placeholder={key} onChange={handleChange} required />\r\n      ))}\r\n      <button type=\"submit\">Create</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TournamentForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAKT,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACU,CAAC,CAACC,MAAM,CAACT,IAAI,GAAGQ,CAAC,CAACC,MAAM,CAACC;EAAM,CAAC,CAAC;EAEzF,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACrB,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAIe,QAAQ,CAACO,EAAE,EAAE;QACfC,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCF,KAAK,CAAC,SAAS,GAAGC,SAAS,CAACE,OAAO,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCJ,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAMgC,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,gBAC3BjC,OAAA;MAAAiC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBC,MAAM,CAACC,IAAI,CAACpC,QAAQ,CAAC,CAACqC,GAAG,CAAEC,GAAG,iBAC7BzC,OAAA;MAAiBK,IAAI,EAAEoC,GAAI;MAACC,WAAW,EAAED,GAAI;MAACE,QAAQ,EAAE/B,YAAa;MAACgC,QAAQ;IAAA,GAAlEH,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiE,CACjF,CAAC,eACFrC,OAAA;MAAQ6C,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACnC,EAAA,CA9CID,cAAc;AAAA6C,EAAA,GAAd7C,cAAc;AAgDpB,eAAeA,cAAc;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}